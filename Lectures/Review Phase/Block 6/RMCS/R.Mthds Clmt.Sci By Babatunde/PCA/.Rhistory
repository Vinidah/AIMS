cors <- ddply(data, .(Country), summarise, cor = round(cor(Relative_Humidity_2M, Bean_Yield), 2))
h_B + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-1.5, y=3.5, color='red')+
ggtitle('Relative_Humidity_2M:Bean Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
h_B <- ggplot(data, aes(Relative_Humidity_2M, Bean_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Relative_Humidity_2M, Bean_Yield), 2))
h_B + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-1.5, y=2.5, color='red')+
ggtitle('Relative_Humidity_2M:Bean Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
h_M <- ggplot(data, aes(Relative_Humidity_2M, Maize_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Relative_Humidity_2M, Maize_Yield), 2))
h_M + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-1.5, y=2.5, color='red')+
ggtitle('Relative_Humidity_2M:Maize Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
h_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-1.5, y=2.5, color='red')+
ggtitle('Relative_Humidity_2M:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
h_C <- ggplot(data, aes(Relative_Humidity_2M, Coffee_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Relative_Humidity_2M, Coffee_Yield), 2))
h_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-1.5, y=2.5, color='red')+
ggtitle('Relative_Humidity_2M:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
#####################################################################################################################
######### CORRELATION BETWEEN INDEPENDENT VARIABLES
#####################################################################################################################
p_C <- ggplot(data, aes(Temperature, Precipitation))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Temperature, Precipitation), 2))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
ggtitle('Temperature:Precipitation Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
#####################################################################################################################
######### CORRELATION BETWEEN INDEPENDENT VARIABLES
#####################################################################################################################
p_C <- ggplot(data, aes(Relative_Humidity_2M, Precipitation))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Relative_Humidity_2M, Precipitation), 2))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
ggtitle('Relative_Humidity_2M:Precipitation Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C <- ggplot(data, aes(Temperature, Precipitation))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
setwd("/home/gladys/AIMS_19_20/AIMS THESIS/DATA/R/MLR")
data = read.csv('X-Y-Data.csv',header=T)
head(data)
View(data)
plot(data)
plot(data, color='pink')
plot(data, color='red')
dlply(data, .(Country), function(x) rcorr(as.matrix(x[,3:9]), type="pearson"))
install.packages("Hmisc")
library(Hmisc)
dlply(data, .(Country), function(x) rcorr(as.matrix(x[,3:9]), type="pearson"))
p_C <- ggplot(data, aes(Precipitation, Coffee_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Precipitation, Coffee_Yield), 2))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_compare_means()+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
install.packages("ggpmisc")
library(ggmisc)
library(ggpmisc)
p_C <- ggplot(data, aes(Precipitation, Coffee_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Precipitation, Coffee_Yield), 2))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_compare_means()+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = 'right', label.y.npc = 0.35, size = 3)+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = -0.5, label.y.npc = 3, size = 3)+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = 0, label.y.npc = 4, size = 3)+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),
label.x.npc = 0, label.y.npc = 4, size = 3)+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
dlply(data, .(Country), function(x) rcorr(as.matrix(x[,3:9]), type="pearson"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P = ", signif(..p.value.., digits = 3), sep = "")),
label.x.npc = 0, label.y.npc = 4, size = 3)+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
p_C + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_fit_glance(                  geom = 'text',
aes(label = paste("P = ", signif(..p.value.., digits = 3), sep = "")),
label.x.npc = 0, label.y.npc = 4, size = 3,color='red')+
ggtitle('Precipitation:Coffee Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
install.packages("ggpubr")
library(ggpubr)
library(ggpmisc)
library(ggpubr)
p_W <- ggplot(data, aes(Precipitation, Wheat_Yield))+ geom_smooth()  + geom_point() +
facet_wrap(~Country) +theme(strip.text.x = element_text(size=8, angle=0),
strip.background = element_rect(colour="red", fill="#CCCCFF"))
cors <- ddply(data, .(Country), summarise, cor = round(cor(Precipitation, Wheat_Yield), 2))
p_W + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=2.5, color='red')+
stat_compare_means()+
ggtitle('Precipitation:Wheat Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
Angola<-data[which(data$Country=='Angola'),]
Cameroon<-data[which(data$Country=='Cameroon'),]
DRC<-data[which(data$Country=='DRC'),]
kenya<-data[which(data$Country=='Kenya'),]
Madagascar<-data[which(data$Country=='Madagascar'),]
Malawi<-data[which(data$Country=='Malawi'),]
Uganda<-data[which(data$Country=='Uganda'),]
Tanzania<-data[which(data$Country=='Tanzania'),]
Zimbabwe<-data[which(data$Country=='Zimbabwe'),]
p_W + geom_text(data=cors, aes(label=paste("r=", cor, sep="")), x=-0.5, y=4, color='red')+
ggtitle('Precipitation:Wheat Yield Correlation')+
theme(plot.title = element_text(hjust = 0.5, size=15, face="bold"))
setwd("/home/gladys/AIMS_19_20/Review Phase/R.Mthds Clmt.Sci By Babatunde/PCA")
install.packages("factoextra")
setwd("/home/gladys/AIMS_19_20/Review Phase/R.Mthds Clmt.Sci By Babatunde/PCA")
setwd("/home/gladys/AIMS_19_20/Review Phase/Block 3/R.Mthds Clmt.Sci By Babatunde/PCA")
DD=read.csv('TurkanaCC.csv')
View(DD)
## Checking missing values in the dataset
which(is.na(DD))
#Plotting the original variables and scores
library(reshape2)
datanew=DD[,-c(1)]
dds = scale(datanew)
head(dds)
#sco = scores[,1]
y= c(DD$Years)
ful = cbind(y,dds)
df1 <- data.frame(dds, y)
df2 <- melt(df1, id.vars='y')
#df3 = cbind(sco,df2)
head(df2)
head(y)
head(df1)
pp1 = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,2]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,2]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC1 (58%)")+theme(legend.position="none")
pp2  = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,3]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,3]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC2 (22%)")+guides(fill=guide_legend(title="Variables"))
pp3 = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,4]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,4]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC3 (12%)")+theme(legend.position="none")
grid.arrange(pp1, pp2, pp3, nrow=3)
#calculating the PCA
library(ggplot2)
library(factoextra)
library(factoextra)
install.packages("factoextra")
#calculating the PCA
library(ggplot2)
library(factoextra)
#Plotting the original variables and scores
library(reshape2)
#calculating the PCA
library(ggplot2)
library(factoextra)
pca = prcomp(datanew,center = T,scale. = T,retx = T)
biplot(pca)
library(psych)
pca2 = data.frame(cbind(DD$Years, scores[,1:3]))
plot(pca2[,1],pca2[,2], xlab = "years", type = "l" )
library(ggplot2)
library(scales)
par(mfrow=c(2,2))
require(gridExtra)
library(factoextra)
install.packages("factoextra")
## ANGOLA
summary(Angola)
Angola<-data[which(data$Country=='Angola'),]
## ANGOLA
summary(Angola)
View(Angola)
## ANGOLA
summary(Angola)
cor(Angola)
cor(Angola[3:9])
## ANGOLA
summary(Angola[3:9])
cor(Angola[3:9])
angola.pca = princomp(Angola[3:9],scores = True, cor = True)
angola.pca = princomp(Angola[3:9],scores = TRUE, cor = TRUE)
angola.pca
summary(angola.pca)
angola.pca.x = princomp(Angola[3:6],scores = TRUE, cor = TRUE)
summary(angola.pca)
angola.pca.y = princomp(Angola[3:6],scores = TRUE, cor = TRUE)
summary(angola.pca)
cor(Angola[3:6])
angola.pca.y = princomp(Angola[3:6],scores = TRUE, cor = TRUE)
summary(angola.pca)
angola.pca.y = princomp(Angola[7:9],scores = TRUE, cor = TRUE)
summary(angola.pca)
angola.pca = princomp(Angola[3:9],scores = TRUE, cor = TRUE)
summary(angola.pca)
loadings(angola.pca)
plot(angola.pca)
screeplot(angola.pca, type = 'line', main = 'screeplot')
a
screeplot(angola.pca, type = 'line', main = 'screeplot')
angola.pca$scores
factorA = factanal(Angola[3:9], nfactors(3), rotation='varimax')
factorA = factanal(Angola[3:9], nfactors(7), rotation='varimax')
factorA = factanal(Angola[3:9], factor=3, rotation='varimax')
factorA
factorA = factanal(Angola[3:9], factor=2, rotation='varimax')
factorA
factorA = factanal(Angola[3:9], factor=1, rotation='varimax')
factorA
install.packages("factoextra")
install.packages("maptools")
install.packages("car")
install.packages("factoextra", dependencies = FALSE)
library(factoextra)
cor(Angola[,3:6])
angola.pca = princomp(Angola[,3:6],scores = TRUE, cor = TRUE)
summary(angola.pca)
loadings(angola.pca)
plot(angola.pca)
screeplot(angola.pca, type = 'line', main = 'screeplot')
angola.pca$scores
factorA = factanal(Angola[3:9], factor=1, rotation='varimax')
factorA
factorA = factanal(Angola[3:9], factor=4, rotation='varimax')
factorA = factanal(Angola[3:9], factor=4, rotation='varimax')
factorA = factanal(Angola[,3:6], factor=3, rotation='varimax')
factorA = factanal(Angola[,3:6], factor=2, rotation='varimax')
factorA = factanal(Angola[,3:6], factor=1, rotation='varimax')
factorA
fit <-principal (fact, nfactors=7, rotate="varimax")
fact = unclass(pca)$rotation  # Converting class to matrix
xx = write.csv(fact, file="factors.csv",)
ss = summary(res.pca)$importance
ss1 = write.csv(ss, file="Summary.csv",)
pca = prcomp(datanew,center = T,scale. = T,retx = T)
biplot(pca)
res.pca = prcomp(datanew,center = T,scale. = T,retx = T)
var <- get_pca_var(res.pca)
var$coord
View(var$coord)
xx = write.csv(var$coord, file="PCcomponents.csv",)
xx1 = write.table(var$coord, file="PCcomponents22.csv",)
fact = unclass(pca)$rotation  # Converting class to matrix
xx = write.csv(fact, file="factors.csv",)
ss = summary(res.pca)$importance
ss1 = write.csv(ss, file="Summary.csv",)
library(psych)
fit <-principal (fact, nfactors=7, rotate="varimax")
print(fit$loadings, cutoff=0.1)
varr = varimax(fact)
plot(pca)   #Selecting the most important factors
plot(pca, type="l") #same as sceeplot    #plot of variance of each PCA.
#It will be useful to decide how many principal components should be retained.
#pcr = varimax(pca$rotation)
##identification of the scores
scores <- pca$x
scores
# identification of the loadings
loadings=pca$rotation
loadings
pca2 = data.frame(cbind(DD$Years, scores[,1:3]))
plot(pca2[,1],pca2[,2], xlab = "years", type = "l" )
library(ggplot2)
library(scales)
par(mfrow=c(2,2))
require(gridExtra)
p1 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,2], color=pca2[,1])) +
# geom_bar(data=df2, aes(x=y, y=value, fill=variable))+
geom_line( color="red")+
geom_point(color="red")+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC1")
p2 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,3])) +
# geom_bar( aes(x=pca2[,1], y=pca2[,2], fill=pca2[,2]), stat="identity")+
geom_line( color="blue")+
geom_point(color="blue")+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC2")
p3 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,4])) +
# geom_bar( aes(x=pca2[,1], y=pca2[,2], fill=pca2[,2]), stat="identity")+
geom_line()+
geom_point()+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC3")
grid.arrange(p1, p2, p3, nrow=3)
# Using princomp to calculate PCA
pc=princomp(datanew, cor = TRUE, scores = TRUE )
summary(pc)
attributes(pc)
biplot(pc, scores=0)
plot(pc)
#library(psych)
library(psych)
fit <-principal (pc, nfactors=3, rotate="none",  )
print(fit$loadings,cutoff = 0.3)
pc$loadings
scors = pc$scores
#rownames(scors)=DD$Years
pc2 = data.frame(cbind(DD$Years, scors[,1:3]))
plot(pc2[,1],pc2[,2], xlab = "years", type = "l" )
ggplot(pc2, aes(x=pc2[,1], y=pc2[,2], color=pc2[,1])) + geom_line()+geom_point()+ xlab("Years") + ylab("PC1")
#plotting the scree plot
screeplot(pca,type = "l",lwd=2,main = "Scree plot") ##COMMENT THIS PLOT
mm=array(NA,c(9,9))
for (i in 1:9){
mm[,i]=pca$rotation[,i]*pca$sdev[i]
}
rownames(mm)=names(datanew)
colnames(mm)=colnames(pca$rotation)
ev=round(pca$sdev^2/sum(pca$sdev^2)*100,2)
print(ev)
plot(pc2[,1],pc2[,2], xlab = "years", type = "l" )
install.packages("FactoMineR")
install.packages("maptools")
install.packages("maptools")
library(maptools)
install.packages("FactoMineR")
install.packages("factoexta")
install.packages("factoextra")
#calculating the PCA
library(ggplot2)
library(factoextra)
pca = prcomp(datanew,center = T,scale. = T,retx = T)
library(factoextra)
pca = prcomp(datanew,center = T,scale. = T,retx = T)
setwd("/home/gladys/AIMS_19_20/Review Phase/Block 3/R.Mthds Clmt.Sci By Babatunde/PCA")
DD=read.csv('TurkanaCC.csv')
## Checking missing values in the dataset
which(is.na(DD))
#Plotting the original variables and scores
library(reshape2)
datanew=DD[,-c(1)]
dds = scale(datanew)
head(dds)
#sco = scores[,1]
y= c(DD$Years)
ful = cbind(y,dds)
head(y)
df1 <- data.frame(dds, y)
head(df1)
df2 <- melt(df1, id.vars='y')
#df3 = cbind(sco,df2)
head(df2)
library(ggplot2)
pp1 = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,2]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,2]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC1 (58%)")+theme(legend.position="none")
pp2  = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,3]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,3]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC2 (22%)")+guides(fill=guide_legend(title="Variables"))
pp3 = ggplot() + geom_bar(data=df2,aes(x=y, y=value, fill=variable),stat='identity', position='dodge')+
geom_line(data = pca2, aes(x=pca2[,1], y=pca2[,4]), color="black")+
geom_point(data = pca2, aes(x=pca2[,1], y=pca2[,4]))+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC3 (12%)")+theme(legend.position="none")
grid.arrange(pp1, pp2, pp3, nrow=3)
pca2 = data.frame(cbind(DD$Years, scores[,1:3]))
#It will be useful to decide how many principal components should be retained.
#pcr = varimax(pca$rotation)
##identification of the scores
scores <- pca$x
scores
library(factoextra)
pca = prcomp(datanew,center = T,scale. = T,retx = T)
biplot(pca)
res.pca = prcomp(datanew,center = T,scale. = T,retx = T)
var <- get_pca_var(res.pca)
var$coord
View(var$coord)
xx = write.csv(var$coord, file="PCcomponents.csv",)
xx1 = write.table(var$coord, file="PCcomponents22.csv",)
fact = unclass(pca)$rotation  # Converting class to matrix
xx = write.csv(fact, file="factors.csv",)
ss = summary(res.pca)$importance
ss1 = write.csv(ss, file="Summary.csv",)
library(psych)
fit <-principal (fact, nfactors=7, rotate="varimax")
print(fit$loadings, cutoff=0.1)
varr = varimax(fact)
plot(pca)   #Selecting the most important factors
plot(pca, type="l") #same as sceeplot    #plot of variance of each PCA.
#It will be useful to decide how many principal components should be retained.
#pcr = varimax(pca$rotation)
##identification of the scores
scores <- pca$x
scores
# identification of the loadings
loadings=pca$rotation
loadings
pca2 = data.frame(cbind(DD$Years, scores[,1:3]))
plot(pca2[,1],pca2[,2], xlab = "years", type = "l" )
library(ggplot2)
library(scales)
par(mfrow=c(2,2))
require(gridExtra)
p1 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,2], color=pca2[,1])) +
# geom_bar(data=df2, aes(x=y, y=value, fill=variable))+
geom_line( color="red")+
geom_point(color="red")+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC1")
p2 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,3])) +
# geom_bar( aes(x=pca2[,1], y=pca2[,2], fill=pca2[,2]), stat="identity")+
geom_line( color="blue")+
geom_point(color="blue")+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC2")
p3 = ggplot(pca2, aes(x=pca2[,1], y=pca2[,4])) +
# geom_bar( aes(x=pca2[,1], y=pca2[,2], fill=pca2[,2]), stat="identity")+
geom_line()+
geom_point()+
theme(axis.text.x = element_text(size = 10, angle = 90),
axis.text.y = element_text(size = 10))+
scale_x_continuous(limits = c(1960,2010), breaks=seq(1960,2010,1))+
xlab("Years") + ylab("PC3")
grid.arrange(p1, p2, p3, nrow=3)
##### X
angola.pca.x = princomp(Angola[,7:9],scores = TRUE, cor = TRUE)
summary(angola.pca.x)
loadings(angola.pca.x)
plot(angola.pca.x)
screeplot(angola.pca.x, type = 'line', main = 'screeplot')
angola.pca.x$scores
factorA.y = factanal(Angola[,7:9], factor=1, rotation='varimax')
factorA.y
factorA.x = factanal(Angola[,7:9], factor=1, rotation='varimax')
factorA.x
factorA.y = factanal(Angola[,3:6], factor=1, rotation='varimax')
factorA.y
mmr = lm(data, cbind(Bean_Yield,Maize_Yield,Wheat_Yield,Coffee_Yield)~Temperature+Precipitation+Relative_Humidity_2M)
mmr = lm(cbind(Bean_Yield,Maize_Yield,Wheat_Yield,Coffee_Yield)~Temperature+Precipitation+Relative_Humidity_2M, data=data)
mmr = lm(cbind(Bean_Yield,Maize_Yield,Wheat_Yield,Coffee_Yield)~Temperature+Precipitation+Relative_Humidity_2M, data=data)
summary(mmr)
mmr = lm(cbind(Bean_Yield,Maize_Yield,Wheat_Yield,Coffee_Yield)~Temperature+Precipitation+Relative_Humidity_2M, data=Angola)
summary(mmr)
head(resid(mmr))
head(fitted(mlm1))
head(fitted(mmr))
coef(mmr)
vcov(mmr)
sigma(mmr)
anova(mmr)
library(car)
anova(mmr)
library(car)
anova(mmr)
library(car)
Anova(mmr)
mmr = ml(cbind(Bean_Yield,Maize_Yield,Wheat_Yield,Coffee_Yield)~Temperature+Precipitation+Relative_Humidity_2M, data=Angola)
