library(datasets)
head(iris3)
summary(iris)
plot(iris)
install.packages('packman')
install.packages("packman")
library('datasets')
head('irish')
library('datasets')
head(iris3)
head(iris)
head(iris)
irish
tail(irish)
tail(iris)
plot(iris$Species)
plot(iris$Sepal.Length)
plot(iris$Petal.Length, iris$Petal.Width, col="#cc0000",
xlab = "Petal Length",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
pch = 18,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
pch = 17,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab87",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab87",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab87",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#ccab00",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width, col="#cc0000",
xlab = "Petal Length",
pch = 19,
main = "Distribution of dataset",
ylab = "Petal Width")
plot(exp,-100,100)
plot(dnorm,-100,100)
plot(dnorm,-100,100)
plot(exp,-100,100)
plot(exp,2,10)
exp(6)
library(datasets)
mtcars?
?mtcars
plot(cars)
plot(mtcars)
head(mtcars)
barplot(table((mtcars$cyl)))
setwd("~/Desktop/AIMS/Lectures/Review Phase/Block 5/BDML/Assignments/001")
data =  read.csv(file.choose(
))
install.packages(psych)
install.packages("psych")
install.packages("psych")
library(corrplot)
library(graphics)
library("ggplot2")
prostate <- read.csv('datasets/prostate-cancer-1.csv')  # DNA MicroArray Gene Expression
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
boxplot(prostate$X206212_at,prostate$X207075_at,prostate$X215872_at,
prostate$X201876_at,prostate$X211935_at,prostate$X206788_s_at,
prostate$X216441_at,prostate$X209290_s_at,
prostate$X219877_at,prostate$X220675_s_at,col =c("brown"), names=c("x1","x2","x3","x4","x5","x6"
,"x7","x8","x9","x10"),main="Selected predictor variables")
pairs(data.frame(prostate$Y,prostate$X206212_at,prostate$X207075_at,prostate$X215872_at,
prostate$X201876_at,prostate$X211935_at,prostate$X206788_s_at,
prostate$X216441_at,prostate$X209290_s_at,
prostate$X219877_at),col="brown",lower.panel=NULL)
pairs.panels(data.frame(prostate$Y,prostate$X206212_at,prostate$X207075_at,prostate$X215872_at,
prostate$X201876_at,prostate$X211935_at,prostate$X206788_s_at,
prostate$X216441_at,prostate$X209290_s_at,
prostate$X219877_at),
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
library(psych)
pairs.panels(data.frame(prostate$Y,prostate$X206212_at,prostate$X207075_at,prostate$X215872_at,
prostate$X201876_at,prostate$X211935_at,prostate$X206788_s_at,
prostate$X216441_at,prostate$X209290_s_at,
prostate$X219877_at),
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
pairs.panels(data.frame(prostate$Y,prostate$X206212_at,prostate$X207075_at,prostate$X215872_at,
prostate$X201876_at,prostate$X211935_at,prostate$X206788_s_at,
prostate$X216441_at,prostate$X209290_s_at,
prostate$X219877_at),
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = FALSE # show correlation ellipses
)
pairs(gifted,col="brown",lower.panel=NULL)
gifted <- read.csv('datasets/gifted.csv')
pairs(gifted,col="brown",lower.panel=NULL)
round(cor(gifted),2)
corrplot(cor(gifted))
hist(gifted$score, col=c("brown"), xlab ="Scores" , main = "Histogram of Scores")
round(cor(gifted),2)
corrplot(cor(gifted))
hist(gifted$score, col=c("brown"), xlab ="Scores" , main = "Histogram of Scores")
m<-mean(gifted$score)
std<-sqrt(var(gifted$score))
hist(gifted$score, density=20, breaks=10, prob=TRUE,
xlab="Scores", ylim=c(0, 0.15),
main="Guassian Curve over histogram of Scores",col="brown")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
shapiro.test(gifted$score)
model1 <-  lm(score ~ motheriq, data =  gifted)
par(mfrow = c(2, 2))
plot(model1,col="blue")
new.motheriq <- data.frame(
motheriq = gifted$motheriq
)
p.interval <- predict(model1, newdata = new.motheriq,  interval = "prediction")
dataset <- cbind(gifted, p.interval)
p <- ggplot(dataset, aes(motheriq, score)) +
geom_point() +
stat_smooth(method = lm)
# 3. Add prediction intervals
p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed")
c.interval <- predict(model1, newdata = new.motheriq,  interval = "confidence")
dataset_updated <- cbind(gifted, c.interval)
p <- ggplot(dataset_updated, aes(motheriq, score)) +
geom_point() +
stat_smooth(method = lm)
# 3. Add prediction intervals
p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
barplot(table(prostate$Y),
main="Distribution of response Y",col=c("blue","brown"),names=c("0","1"),ylab="Frequency")
